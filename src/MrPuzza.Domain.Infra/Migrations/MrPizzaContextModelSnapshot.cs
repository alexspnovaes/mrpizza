// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MrPuzza.Domain.Infra.Contexts;

namespace MrPuzza.Domain.Infra.Migrations
{
    [DbContext(typeof(MrPizzaContext))]
    partial class MrPizzaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MrPizza.Domain.Entities.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnName("endereco")
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id")
                        .HasName("PK_enderecoId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("MrPizza.Domain.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHoraPedido")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IdEndereco")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_pedidoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("MrPizza.Domain.Entities.PedidoPizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPedido")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPizza")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_pedidoPizzaId");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdPizza");

                    b.ToTable("PedidoPizza");
                });

            modelBuilder.Entity("MrPizza.Domain.Entities.Pizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id")
                        .HasName("PK_pizzaId");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("MrPizza.Domain.Entities.PizzaSabor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPizza")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSabor")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_pizzaSaborId");

                    b.HasIndex("IdPizza");

                    b.ToTable("PizzaSabor");
                });

            modelBuilder.Entity("MrPizza.Domain.Entities.Sabor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id")
                        .HasName("PK_saborId");

                    b.ToTable("Sabor");
                });

            modelBuilder.Entity("MrPizza.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DDD")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("EmailLogin")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("EnderecoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEndereco")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id")
                        .HasName("PK_usuarioId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MrPizza.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("MrPizza.Domain.Entities.Usuario", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("MrPizza.Domain.Entities.PedidoPizza", b =>
                {
                    b.HasOne("MrPizza.Domain.Entities.Pedido", "Pedido")
                        .WithMany("PedidosPizzas")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MrPizza.Domain.Entities.Pizza", "Pizza")
                        .WithMany("PedidosPizzas")
                        .HasForeignKey("IdPizza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MrPizza.Domain.Entities.PizzaSabor", b =>
                {
                    b.HasOne("MrPizza.Domain.Entities.Pizza", "Pizza")
                        .WithMany("PizzaSabores")
                        .HasForeignKey("IdPizza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MrPizza.Domain.Entities.Sabor", "Sabor")
                        .WithMany("PizzaSabores")
                        .HasForeignKey("IdPizza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MrPizza.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("MrPizza.Domain.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");
                });
#pragma warning restore 612, 618
        }
    }
}
